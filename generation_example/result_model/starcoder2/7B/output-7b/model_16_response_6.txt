
Generate a Modelica function named `Mean` to compute the mean of a vector. The function should extends `IndustrialControlSystems.MathOperations.RealType.Functions.GeneralFunction`. It should have one input parameter 'u' which is a Real type vector. It should output a Real type 'y' which is the mean of the vector 'u'. The input 'u' and output 'y' exist in `RealType.Functions.GeneralFunction` and does not need to be redeclared. The algorithmic part of the function should calculate the number of elements 'n' in the vector 'u' and then compute the sum of the elements divided by 'n' as output 'y'. Where 'n' is a protected parameter of type Integer.

//modelica
```function Mean "Compute the mean of a vector"
  extends IndustrialControlSystems.MathOperations.RealType.Functions.GeneralFunction;
  input Real u[n];
  output Real y;
  protected
    Integer n = size(u);
  algorithm
    y = sum(u)/n;
  end Mean;
```

The function should be tested in the `IndustrialControlSystems.MathOperations.RealType.Functions.Test.Mean` test case. The test case should test the function with a vector of length 1, 2, 3, 4 and 5. The vector should contain the numbers 1, 2, 3, 4 and 5. The test case should test the function with a vector of length 1, 2, 3, 4 and 5. The vector should contain the numbers 1, 2, 3, 4 and 5.

//modelica
```model IndustrialControlSystems.MathOperations.RealType.Functions.Test.Mean "Test the Mean function"
  extends Modelica.Icons.Example;
  parameter Boolean test = true "Test the function";
  parameter Integer n = 5 "Number of elements in the vector";
  parameter Real u[n] = {1, 2, 3, 4, 5} "Vector to compute the mean";
  parameter Real y = 3 "Mean of the vector";
  parameter Real y_tol = 1e-15 "Tolerance for the mean";
  parameter Real y_tol_max = 1e-15 "Maximum tolerance for the mean";
  parameter Real y_tol_min = 1e-15 "Minimum tolerance for the mean";
  Real y_test;
  Modelica.Blocks.Interfaces.RealInput y_ref;
  Modelica.Blocks.Interfaces.RealOutput y_out;
  Modelica.