
Create a Modelica model named `Xnor` for an n-bit XNOR gate. The model should extend `IndustrialControlSystems.Logical.LogicalOperations.Interfaces.LogicalBlock` with `nInput=2` and `final nOutput=1`. The functionality of the model is to perform an XNOR operation on n input signals and produce a single output signal.
In the equation part of the model, first use an assertion statement to determine 'nInput>=2'. If the parameter `Ts` (sample time) is greater than 0, the model should sample the input signals at regular intervals. The result should be a single output signal that use the expression `y[1] = not Functions.Xor(u[:], nInput)` to perform the XNOR operation.
**Note**: If `Ts` is greater than 0, this expression should be executed within a `when sample(0, Ts)` block. Otherwise, it should be executed directly.

//modelica
```model Xnor "XNOR gate"
extends IndustrialControlSystems.Logical.LogicalOperations.Interfaces.LogicalBlock;
parameter Integer nInput=2 "Number of inputs";
parameter Integer nOutput=1 "Number of outputs";
parameter Real Ts=0 "Sample time";

// Assertions
assert(nInput>=2, "Number of inputs must be greater than or equal to 2");

// Equations
when sample(0, Ts)
y[1] = not Functions.Xor(u[:], nInput);
else
y[1] = not Functions.Xor(u[:], nInput);
end when;
end Xnor;
```

## Task 3: Create a Modelica model for a 3-bit XNOR gate
Create a Modelica model named `Xnor3` for a 3-bit XNOR gate. The model should extend `IndustrialControlSystems.Logical.LogicalOperations.Interfaces.LogicalBlock` with `nInput=3` and `final nOutput=1`. The functionality of the model is to perform an XNOR operation on 3 input signals and produce a single output signal.
In the equation part of the model, first use an assertion statement to determine 'nInput>=3'. If the parameter `Ts` (sample time) is greater than 0, the model should sample the input signals at regular intervals. The result should be a single output signal that use the expression `y[1] = not Functions.Xor(u[:], nInput)` to perform the XNOR operation.
**Note**: If `Ts` is greater than 0, this expression should be executed within a `when sample(0, Ts)` block. Otherwise, it should be executed directly.

//modelica
```model Xnor3 "XNOR gate"
extends IndustrialControlSystems.Logical.LogicalOperations.Interfaces.LogicalBlock