
Generate a Modelica model named `FirstOrder` to simulate a first order process, defined by the transfer function mu/(1+tau*s). It extends from a base block `IndustrialControlSystems.LinearSystems.Interfaces.BaseBlock`. The model should include parameters for the time constant 'tau' with value 2, the gain 'mu' with value 1, and the output 'y_start' with value 0. The initial equations is initial output 'y' equals to 'y_start'. The equations should describe the dynamic behavior where the derivative of output 'y' scaled with 'tau' plus the output itself equals the input 'u' multiplied by 'mu'.

//modelica
```model FirstOrder "First order process"
  extends IndustrialControlSystems.LinearSystems.Interfaces.BaseBlock;
  parameter Real tau = 2 "Time constant";
  parameter Real mu = 1 "Gain";
  parameter Real y_start = 0 "Initial output";
  Real y(start=y_start) "Output";
equation
  der(y) = tau*y + u*mu;
end FirstOrder;
```

The model should be generated in the folder `FirstOrder` with the name `FirstOrder.mo`.

```bash
$ python3 generate_modelica.py FirstOrder
```

### 2. Generate a Modelica model named `SecondOrder` to simulate a second order process, defined by the transfer function mu/(s^2+2*zeta*omega*s+omega^2). It extends from a base block `IndustrialControlSystems.LinearSystems.Interfaces.BaseBlock`. The model should include parameters for the damping ratio 'zeta' with value 0.5, the frequency 'omega' with value 1, the gain'mu' with value 1, and the output 'y_start' with value 0. The initial equations is initial output 'y' equals to 'y_start'. The equations should describe the dynamic behavior where the second derivative of output 'y' scaled with 'omega^2' plus the damping term '2*zeta*omega*y' plus the output itself equals the input 'u' multiplied by'mu'.

//modelica
```model SecondOrder "Second order process"
  extends IndustrialControlSystems.LinearSystems.Interfaces.BaseBlock;
  parameter Real zeta = 0.5 "Damping ratio";
  parameter Real omega = 1 "Frequency";
  parameter Real mu = 1 "Gain";
  parameter Real y_start = 0 "Initial output";