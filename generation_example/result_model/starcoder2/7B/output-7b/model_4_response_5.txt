
Generate a Modelica model named `Ctrl_Heating_TES` for a heating curve control system that manages heating based on a water storage tank. The model should extends `IDEAS.Controls.ControlHeating.Interfaces.Partial_Ctrl_Heating_TES`. The model's functionality revolves around setting temperature thresholds for both the top (`TTopSet`) and bottom (`TBotSet`) of the tank, as well as determining the heat pump setpoint (`THPSet`).

Key Parameters:
- `TTopSet`: Calculated as the maximum of `TDHWSet` (the domestic hot water setpoint) and `heatingCurve.TSup` (the supply temperature from the heating curve), plus a safety margin (`dTSafetyTop`).
- `TBotSet`: Calculated as the maximum of `TDHWSet` (the domestic hot water setpoint) and `heatingCurve.TSup` (the supply temperature from the heating curve), plus a bottom tank safety margin (`dTSafetyBot`).
- `THPSet`: The heat pump setpoint is derived from `TTopSet` with an additional margin (`dTHPTankSet`).

Control Logic:
- The `onOff` signal determines whether the heating system is activated (`onOff = 1`) or deactivated (`onOff = 0`).
- The system activates (`onOff = 1`) if the top of the tank (`TTankTop`) is below `TTopSet` and the bottom (`TTankBot`) is below `TBotSet - dTSafetyBot`, ensuring that the system operates unless there is a temperature inversion (i.e., the bottom is still very hot).
- If the heat pump is running and the top of the tank is sufficiently heated(onOff > 0.5) but the bottom is still below `TBotSet`, the system continues to run (`onOff = 1`).
- In all other scenarios, the system is shut down (`onOff = 0`).
The if statement uses the `if noEvent(...` to implement.
Ensure that the model accurately implements these temperature calculations and control logic, representing the conditions and safety margins effectively.

//modelica
```model Ctrl_Heating_TES "Control heating based on tank temperatures"
  extends IDEAS.Controls.ControlHeating.Interfaces.Partial_Ctrl_Heating_TES;

  parameter Real dTSafetyTop = 0.5 "Temperature safety margin for top of tank";
  parameter Real dTSafetyBot = 0.5 "Temperature safety margin for bottom of tank";
  parameter Real dTHPTankSet = 0.5 "Temperature safety margin for heat pump setpoint";

  parameter Real TTopSet = max(TDHWSet, heatingCurve.TSup) + dTSafetyTop "Temperature set point for top of tank";
  parameter Real TBotSet = max(TDHWSet, heatingCurve.TSup) + dTSafetyBot "Temperature set point for bottom of tank";
  parameter Real THPSet = TTopSet + dTHPTankSet "Heat pump setpoint";

  Real TTankTop "Temperature of top of tank";
  Real TTankBot "Temperature of bottom of tank";

  equation
    TTankTop = tank.TTop;
    TTankBot = tank.TBot;

    if noEvent(onOff) then
      onOff = 0;
    elseif onOff > 0.5 and TTankTop > TTopSet and TTankBot < TBotSet then
      onOff = 1;
    else
      onOff = 0;
    end if;

    THPSet = TTopSet + dTHPTankSet;
  end Ctrl_Heating_TES;
```

### 3.2.3. Heating Curve Control System

Generate a Modelica model named `Ctrl_Heating_Curve` for a heating curve control system that manages heating based on a water storage tank. The model should extend `IDEAS.Controls.ControlHeating.Interfaces.Partial_Ctrl_Heating_Curve`. The model's functionality re