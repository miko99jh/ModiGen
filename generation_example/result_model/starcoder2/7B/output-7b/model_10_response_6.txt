
Generate a Modelica function for a lead-lag process with the transfer function k(1+sT1)/(1+sT2). The function should be named `f1p1z`. The inputs should include 'alfa' (discretization parameter), 'T1' (zero), 'T2' (pole), 'u' (current input), 'u_pre' (previous input), 'y_pre' (previous output), 'Ts' (sampling time in seconds), and 'k' (gain). The output should be 'y' (output). The function should calculate intermediate variables(protected parameter) A, B, C, D, E, and F in algorithm as follows:
- A := alfa*Ts;
- B := Ts - alfa*Ts;
- C := A + T1;
- D := B - T1;
- E := A + T2;
- F := B - T2;
The output 'y' should be computed using the formula: y := (C*k*u + D*k*u_pre - F*y_pre)/E. All parameter variables involved in this function are Real.

//modelica
```function f1p1z
"Lead-lag function"
input Real alfa "Discretization parameter";
input Real T1 "Zero";
input Real T2 "Pole";
input Real u "Current input";
input Real u_pre "Previous input";
input Real y_pre "Previous output";
input Real Ts "Sampling time in seconds";
input Real k "Gain";
output Real y "Output";
protected
parameter Real A = alfa*Ts;
parameter Real B = Ts - alfa*Ts;
parameter Real C = A + T1;
parameter Real D = B - T1;
parameter Real E = A + T2;
parameter Real F = B - T2;
end f1p1z;
```

## 2. Generate a Modelica function for a lead-lag process with the transfer function k(1+sT1)/(1+sT2). The function should be named `f1p1z`. The inputs should include 'alfa' (discretization parameter), 'T1' (zero), 'T2' (pole), 'u' (current input), 'u_pre' (previous input), 'y_pre' (previous output), 'Ts' (sampling time in seconds), and 'k' (gain). The output should be 'y' (output). The function should calculate intermediate variables(protected parameter) A, B, C, D, E, and F in algorithm as follows:
- A := alfa*Ts;
- B := Ts - alfa*Ts;
- C := A + T1;
- D := B - T1;
- E := A + T2;
- F := B - T2;
The output 'y' should be computed using the formula: y := (C*k*u + D*k*u_pre -